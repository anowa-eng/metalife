{"ast":null,"code":"import { Observable, firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./http.service\";\nexport let UserDataService = /*#__PURE__*/(() => {\n  class UserDataService {\n    constructor(httpService) {\n      this.httpService = httpService;\n    }\n\n    fetchUser(id) {\n      return this.httpService.httpClient.get(`/api/user/${id}`, {\n        responseType: 'json'\n      });\n    }\n\n    fetchUsers(ids) {\n      return new Observable(sub => {\n        let users = [];\n\n        for (const id of ids) {\n          this.fetchUser(id).subscribe(userData => {\n            users.push(userData);\n          });\n        }\n\n        sub.next(users);\n      });\n    }\n\n    loadUserProfile(id) {\n      return new Observable(sub => {\n        this.fetchUser(id).subscribe(data => {\n          sub.next({\n            userId: data.user.id,\n            profile: data.user_profile\n          });\n        });\n      });\n    }\n\n    loadUserProfiles(ids) {\n      return new Observable(sub => {\n        let profiles = [];\n        let observables = ids.map(id => this.loadUserProfile(id));\n        let promises = observables.map(observable => firstValueFrom(observable));\n        Promise.all(promises).then(profiles => sub.next(profiles));\n      });\n    }\n\n  }\n\n  UserDataService.ɵfac = function UserDataService_Factory(t) {\n    return new (t || UserDataService)(i0.ɵɵinject(i1.HttpService));\n  };\n\n  UserDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserDataService,\n    factory: UserDataService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserDataService;\n})();","map":null,"metadata":{},"sourceType":"module"}