{"ast":null,"code":"export function transformData(userData, userId) {\n  // Transform based on distance to user of ID userId\n  let user = userData.find(userInRoom => userInRoom.user_id == userId);\n  let distances = {};\n\n  for (const data of userData) {\n    let positionData = data.data;\n    distances[data.user_id] = {\n      x: positionData.position.x - user.data.position.x,\n      y: positionData.position.y - user.data.position.y\n    };\n  }\n\n  let transformation = Object.entries(distances).map(entries => {\n    let userId = parseInt(entries[0]),\n        distanceData = entries[1];\n    let center = {\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2\n    };\n    let position = {\n      x: center.x + distanceData.x,\n      y: center.y + distanceData.y\n    };\n    return {\n      position: position,\n      user_id: userId\n    };\n  }) // Add the direction data to the transformed data as well\n  .map(data => {\n    let direction = userData.find(user => user.user_id === data.user_id).data.direction;\n    return Object.assign(Object.assign({}, data), {\n      direction: direction\n    });\n  });\n  return transformation;\n}","map":null,"metadata":{},"sourceType":"module"}