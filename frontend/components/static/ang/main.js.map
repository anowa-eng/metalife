{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data-editor/data-editor.component.ts","./src/app/data-editor/data-editor.component.html","./src/app/http.service.ts","./src/app/room-view/room-data.service.ts","./src/app/room-view/room-view.component.ts","./src/app/room-view/room-view.component.html","./src/app/room-view/transform-data.ts","./src/app/user-data.service.ts","./src/app/window.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, ViewChild, ElementRef, ComponentRef, AfterViewInit } from '@angular/core';\r\nimport { DataEditorComponent } from './data-editor/data-editor.component';\r\n\r\nimport { RoomViewComponent } from './room-view/room-view.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements AfterViewInit {\r\n  @ViewChild(DataEditorComponent)\r\n  dataEditorComponent!: DataEditorComponent;\r\n  @ViewChild(RoomViewComponent)\r\n  roomViewComponent!: RoomViewComponent;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataEditorComponent.ngModelChangeListener?.subscribe((localUser) => {\r\n      this.roomViewComponent.localUser = this.dataEditorComponent.localUser;\r\n    });\r\n  }\r\n}\r\n","<app-data-editor></app-data-editor>\r\n<app-room-view></app-room-view>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { RoomViewComponent } from './room-view/room-view.component';\r\nimport { DataEditorComponent } from './data-editor/data-editor.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RoomViewComponent,\r\n    DataEditorComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    AppRoutingModule\r\n  ],\r\n  exports: [\r\n    AppComponent,\r\n    RoomViewComponent,\r\n    DataEditorComponent\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, HostListener, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-data-editor',\n  templateUrl: './data-editor.component.html',\n  styleUrls: ['./data-editor.component.scss']\n})\nexport class DataEditorComponent implements OnInit {\n  localUser?: any = {};\n  @Output() ngModelChangeListener = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onNgModelChange() {\n    this.ngModelChangeListener.emit(this.localUser);\n  }\n}\n","<label for=\"direction\">Direction: </label>\n<input\n    type=\"range\"\n    min=\"-180\"\n    max=\"180\"\n    [(ngModel)]=\"localUser.direction\"\n    (ngModelChange)=\"onNgModelChange()\"\n    id=\"direction\"> \n<output>({{localUser?.direction}})</output>","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n  httpClient: HttpClient;\r\n\r\n  constructor(httpClient: HttpClient) {\r\n    this.httpClient = httpClient;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpService } from './../http.service';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoomDataService {\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  getInitialData(): Observable<any> {\r\n    return this.httpService.httpClient.get('/api/get-initial-room-data', { responseType: 'json' });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { RoomDataService } from './room-data.service';\r\nimport { UserDataService } from './../user-data.service';\r\n\r\nimport { transformData } from './transform-data';\r\nimport { WindowService } from '../window.service';\r\n\r\n@Component({\r\n  selector: 'app-room-view',\r\n  templateUrl: './room-view.component.html',\r\n  styleUrls: ['./room-view.component.scss']\r\n})\r\nexport class RoomViewComponent implements OnInit {\r\n  untransformedData?: any[];\r\n  data!: any[];\r\n  userProfiles!: any[];\r\n\r\n  localUser?: any;\r\n\r\n  centerDimensions?: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n\r\n  constructor(\r\n    private roomDataService: RoomDataService,\r\n    private userDataService: UserDataService,\r\n    private windowService: WindowService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // Get initial data\r\n    this.roomDataService.getInitialData()\r\n      .subscribe((res) => {\r\n        let data = res.data;\r\n        this.untransformedData = res.data;\r\n\r\n        let transformedData = transformData(data, 1);\r\n        this.data = transformedData;\r\n\r\n        this.loadProfiles();\r\n      });\r\n    \r\n    // Update centerDimensions with the this.windowService.dimensions\r\n    this.updateData(this.windowService.dimensions);\r\n    this.windowService.onUpdate((dimensions) => this.updateData(dimensions));\r\n  }\r\n\r\n  updateData(dimensions?: any) {\r\n    let transformedData = transformData(this.untransformedData, 1);\r\n\r\n    if (dimensions)\r\n      this.centerDimensions = {\r\n        x: dimensions!.width / 2,\r\n        y: dimensions!.height / 2\r\n      };\r\n  }\r\n\r\n  loadProfiles() {\r\n    let ids = this.data?.map((user) => user.user_id);\r\n    this.userDataService.loadUserProfiles(ids)\r\n      .subscribe((profiles) => {\r\n        this.userProfiles = profiles;\r\n      })\r\n  }\r\n\r\n  getProfileById(userInRoom: any) {\r\n    let userId = userInRoom.user_id;\r\n    return this.userProfiles?.find((user) => user.userId === userId);\r\n  }\r\n\r\n}\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\">\r\n  <defs>\r\n    <ng-container *ngIf=\"userProfiles\">\r\n      <pattern\r\n        id=\"user-{{userProfile.userId}}\"\r\n        x=\"0\"\r\n        y=\"0\"\r\n        width=\"25\"\r\n        height=\"25\"\r\n        *ngFor=\"let userProfile of userProfiles\"\r\n      >\r\n        <image\r\n          [attr.href]=\"userProfile.profile.avatar\"\r\n          width=\"25\"\r\n          height=\"25\"\r\n        />\r\n      </pattern>\r\n    </ng-container>\r\n  </defs>\r\n  <g attr.transform=\"rotate({{localUser?.direction || 0}} {{centerDimensions?.x}} {{centerDimensions?.y}})\">\r\n    <circle\r\n      [attr.r]=\"12.5\"\r\n      [attr.cx]=\"userInRoom.position.x\"\r\n      [attr.cy]=\"userInRoom.position.y\"\r\n      attr.fill=\"url(#user-{{getProfileById(userInRoom)?.userId}})\"\r\n      *ngFor=\"let userInRoom of data\" />\r\n  </g>\r\n</svg>","export function transformData(userData: any, userId: number) {\r\n    // Transform based on distance to user of ID userId\r\n\r\n    let user = userData.find((userInRoom: any) => userInRoom.user_id === userId);\r\n    let distances: any = {};\r\n    for (const data of userData)\r\n        distances[data.user_id] = {\r\n            x: data.position.x - user.position.x,\r\n            y: data.position.y - user.position.y\r\n        };\r\n    let transformation1 = Object\r\n        .entries(distances)\r\n        .map((entries: any) => {\r\n            let userId = parseInt(entries[0]),\r\n                distanceData = entries[1];\r\n            \r\n            let center: any = {\r\n                x: window.innerWidth / 2,\r\n                y: window.innerHeight / 2\r\n            };\r\n\r\n            let position = {\r\n                x: center.x + distanceData.x,\r\n                y: center.y + distanceData.y\r\n            };\r\n            return {\r\n                position: position,\r\n                user_id: userId\r\n            };\r\n        });\r\n\r\n    return transformation1;\r\n}","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpService } from './http.service';\r\n\r\nimport { Observable, firstValueFrom } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserDataService {\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  fetchUser(id: number): Observable<any> {\r\n    return this.httpService.httpClient.get(`/api/user/${id}`, { responseType: 'json' });\r\n  }\r\n\r\n  fetchUsers(ids: number[]): Observable<any[]> {\r\n    return new Observable((sub) => {\r\n      let users: any[] = [];\r\n      for (const id of ids) {\r\n        this.fetchUser(id)\r\n          .subscribe((userData: any) => {\r\n            users.push(userData);\r\n          })\r\n      }\r\n\r\n      sub.next(users);\r\n    });\r\n  }\r\n\r\n  private loadUserProfile(id: number): Observable<any> {\r\n    return new Observable((sub) => {\r\n      this.fetchUser(id)\r\n        .subscribe((data: any) => {\r\n          sub.next({\r\n            userId: data.user.id,\r\n            profile: data.user_profile\r\n          })\r\n        });\r\n    })\r\n  }\r\n  loadUserProfiles(ids: number[]): Observable<any[]> {\r\n    return new Observable((sub) => {\r\n      let profiles: any[] = [];\r\n\r\n      let observables = ids.map((id) => this.loadUserProfile(id));\r\n      let promises = observables.map((observable) => firstValueFrom(observable));\r\n      Promise.all(promises)\r\n        .then((profiles) => sub.next(profiles));\r\n    });\r\n  }\r\n}\r\n","import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WindowService {\n  private renderer: Renderer2;\n\n  dimensions?: {\n    width: number;\n    height: number;\n  }\n  resizeListeners?: ((dimensions: typeof this.dimensions) => void)[];\n\n  constructor(private rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n\n    this.update();\n    this.renderer.listen(window, 'onresize', () => {\n      this.update();\n      if (this.resizeListeners)\n        for (const fn of this.resizeListeners)\n          fn(this.dimensions);\n    });\n  }\n\n  private update() {\n    this.dimensions = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  }\n\n  onUpdate(fn: (dimensions: typeof this.dimensions) => void) {\n    this.resizeListeners?.push(fn);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}